@{
    ViewBag.Title = "Manage Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="page-content">
    <div class="container-fluid">

        <!-- start page title -->
        <div class="row">
            <div class="col-12">
                <div class="page-title-box d-sm-flex align-items-center justify-content-between">
                    <h4 class="mb-sm-0 font-size-18">Manage Users</h4>

                    <div class="page-title-right">
                        <ol class="breadcrumb m-0">
                            <li class="breadcrumb-item active">Manage Users</li>
                        </ol>
                    </div>

                </div>
            </div>
        </div>
        <!-- end page title -->

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-body">
                        <a href="@Url.Action("Details","Users")" class="btn btn-primary">Add Users</a>
                        <div class="portlet-body table-responsive" id="divUsersTable">
                            <table class="table table-bordered dt-responsive  nowrap w-100" id="UsersTable"></table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {

    <script>

        $(document).ready(function () {
            UsersDataTable.init();
        })

        var UsersDataTable = function () {
            let initTable1 = function () {
                let table = $('#UsersTable');
                let oTable = table.dataTable({
                    "stateSave": true,
                    "autoWidth": false,
                    "paging": true,
                    "language": {
                        "aria": {
                            "sortAscending": ": activate to sort column ascending",
                            "sortDescending": ": activate to sort column descending"
                        },
                        "emptyTable": "No data available in table",
                        "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                        "infoEmpty": "No entries found",
                        "infoFiltered": "(filtered1 from MAX total entries)",
                        "search": "Search:",
                        "zeroRecords": "No matching records found"
                    },
                    "pageLength": 10,
                    "processing": true,
                    "serverSide": true,
                    "ajax": {
                        async: true,
                        url: '@Url.Action("ManageUsers","Users")',
                        type: "post",
                        data: SearchCriteria(),
                    },
                    "columns": [
                        {
                            "title": "#", "data": "Id",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0">${row["Id"]}</p >`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "User Name", "data": "FirstName",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0">
                                        ${row["FirstName"] == "" || row["FirstName"] == null ? "-" : row["FirstName"]}
                                        ${row["LastName"] == "" || row["LastName"] == null ? "-" : row["LastName"]}
                                    </p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "EmailId", "data": "EmailId",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0">${row["EmailId"] == "" || row["EmailId"] == null ? "-" : `<a href="mailto:${row["EmailId"]}">${row["EmailId"]}</a>`}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Address", "data": "Address",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0">${row["Address"] == "" || row["Address"] == null ? "-" : row["Address"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Date Of Birth", "data": "DateOfBirth",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<p class="mb-0">${row["DateOfBirth"] == "" || row["DateOfBirth"] == null ? "-" : row["DateOfBirth"]}</p>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                        {
                            "title": "Action", "data": "Id",
                            "render": function (data, type, row) {
                                let htmlData = "";
                                htmlData += `<a href="@Url.Action("Details","Users")?ri=${btoa(row["Id"])}" class="btn btn-soft-success"><i class="bx bx-edit"></i></a>
                                            <button class="btn btn-soft-danger ml-2" onclick="ConfirmDeleteRecord('${row["Id"]}')"><i class="bx bx-trash"></i></button>`;

                                return htmlData;
                            }
                            , "orderable": false, "width": "3%"
                        },
                    ],

                    "buttons": [],

                    responsive: true,

                    "lengthMenu": [
                        [5, 10, 15, 20, 1000],
                        [5, 10, 15, 20, 1000]
                    ],

                    "dom": "<'row' <'col-md-12'B>><'row'<'col-md-6 col-sm-12'l><'col-md-6 col-sm-12'f>r><'table-scrollable't><'row'<'col-md-5 col-sm-12'i><'col-md-7 col-sm-12'p>>",
                });
            }

            return {
                init: function () {
                    if ($.fn.DataTable.isDataTable("#UsersTable")) {
                        $('#UsersTable').dataTable().fnDestroy();
                        $('#divUsersTable').html('<table class="table table-bordered dt-responsive  nowrap w-100" id="UsersTable"></table>');
                    }
                    initTable1();
                }
            };
        }();

        function SearchCriteria() {
            try {
                var param = {};
                return addRequestVerificationToken(param);
            } catch (e) { }
        }

        //Confirm Delete Record
        function ConfirmDeleteRecord(DataId) {
            Swal.fire({ title: "Are you sure?", text: "You won't be delete this record!", icon: "warning", showCancelButton: !0, confirmButtonColor: "#2ab57d", cancelButtonColor: "#fd625e", confirmButtonText: "Yes, delete it!" }).then(
                function (result) {
                    if (result.isConfirmed) {
                        DeleteUserData(DataId);
                    }
                }
            );
        }

        function DeleteUserData(DataId) {
            $.ajax({
                url: '@Url.Action("DeletedUserData","Users")',
                data: {
                    Id: DataId
                },
                type: 'GET',
                datatype: 'json',
                success: function (response) {
                    console.log('response', response);
                    if (response == true) {
                        UsersDataTable.init();
                        Swal.fire("Deleted!", "Your record has been deleted.", "success");
                    }
                },
                error: function () { }
            });
        }

    </script>
}